@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&display=swap'); /*«Open Sans» ( Open+Sans) — это импортируемый шрифт.*/
*{
  margin: 0;
  padding: 0;
  box-sizing: border-box; /*CSS свойство box-sizing определяет как вычисляется общая ширина и высота элемента. ... content-box даёт стандартное поведение свойства box-sizing. Если вы выставите элементу ширину 100 пикселей, то ширина его контента будет 100 пикселей, а ширина границ и внутренних отступов при рендере будет добавлена к финальной ширине, делая элемент шире ста пикселей. border-box говорит браузеру учитывать любые границы и внутренние отступы в значениях, которые вы указываете в ширине и высоте элемента. Если вы выставите элементу ширину 100 пикселей, то эти 100 пикселей будут включать в себя границы и внутренние отступы, а контент сожмётся, чтобы выделить для них место*/
  font-family: 'Poppins', sans-serif;
} /*На ранних стадиях использования техники сброса, дизайнеры устанавливали значения только для полей и отступов, используя правило глобального сброса:
Но чем больше людей использовали сброс и обсуждали его, тем очевиднее становился факт, что установка значений только для полей и отступов не достаточна (и применение выше приведенного правила для каждого элемента плохо сказывается на механизме вывода страницы).
*/
::selection{
  color: rgb(255, 255, 255);
  background: rgb(40, 58, 221); /*Псевдоэлемент ::selection применяет стиль к выделенному пользователем тексту. В правилах стилей допускается использовать следующие свойства: color, background и background-color.*/
}
body{
  width: 100%;
  height: 100vh; /*  /* overflow: hidden; */Одно правило для body — height: 100vh — задает высоту вашему приложению равной высоте области просмотра. ... Данный пример демонстрирует оба варианта с использованием кастомных свойств CSS (переменных), позволяющим придать расчету больше семантики.*/

  padding: 10px; /*Свойство padding задает все свойства полей в одной строке. Это свойство может иметь от одного до четырех значений. Примеры: * padding:10px 5px 15px 20px; - верхнее поле 10px - правое поле 5px - нижнее поле 15px - левое поле 20px. * padding:10px 5px 15px; - верхнее поле 10px - правое и левое поля 5px - нижнее поле 15px. * padding:10px 5px; - верхнее и нижнее поля 10px - правое и левое поля 5px. * padding:10px; - все четыре поля 10px.*/
  /*background: linear-gradient(to bottom, #ffffff 0%, #1550cf 100%); /*Линейный градиент linear-gradient(). Рис. 1. Линия градиента, начальная и конечная точки и угол градиента. Линейный градиент создается с помощью двух и более цветов, для которых задано направление, или линия градиента . ... с помощью ключевых слов to top , to right , to bottom , to left , которые соответствуют углу градиента, равному 0deg , 90deg , 180deg и 270deg соответственно. div{height: 200px;background:linear-gradient(to right, #F6EFD2, #CEAD78);} CSS. ... Точки остановки задаются в % , где 0% — начальная точка, 100% — конечная точка, например: div{height: 200px;background:linear-gradient(to top, #E4AF9D 20%, #E4E4D8 50%, #A19887 80%);} */
*/}
.wrapper{ /*обертка*/
  background: #fff;
  max-width: 400px; /*CSS свойство width устанавливает ширину области содержимого элемента. Свойства min-width и max-width могут переопределить ширину. CSS свойство width не включает в себя отступы ( padding ), границы ( border ) и поля ( margin ): Общая ширина элемента вычисляется по формуле: width (ширина) + padding-left (левый отступ) + padding-right (правый отступ) + border-left (левая граница) + border-right (правая граница).*/
  width: 100%;
  margin: 220px auto;
  padding: 55px;
  border-radius: 25px;
  box-shadow: 0px 10px 15px rgba(63, 55, 55, 0.1);
  border: 3px solid rgb(0, 0, 0);
}
.wrapper header{
  font-size: 30px;
  font-weight: 600; /*CSS свойство font-weight устанавливает начертание шрифта. Некоторые шрифты доступны только в нормальном или полужирном начертании.*/
}
.wrapper .inputField{
  margin: 40px 0;
  width: 100%;
  display: flex;
  height: 65px;
}
.inputField input{
  width: 85%;
  height: 100%;
  outline: none; /*Универсальное свойство outline, одновременно устанавливающее цвет, стиль и толщину внешней границы на всех четырёх сторонах элемента. ... outline¶. Универсальное свойство outline , одновременно устанавливающее цвет, стиль и толщину внешней границы на всех четырёх сторонах элемента. В отличие от линии, задаваемой через border , свойство outline не влияет на положение блока и его ширину.*/
  border-radius: 15px;
  border: 3px solid rgb(132, 113, 113);
  font-size: 17px;
  padding-left: 15px;
  transition: all 0.3s ease; /*-webkit-transition: all 0.5s ease; Теперь Transition-эффект будет применяться ко всем изменяющимся при событии свойстам и с одинаковыми параметрами — 0.5 секунд, ease-эффект. Так же, мы можем добавить задержку для эффекта: a.foo { padding: 5px 10px; background: #69f; color: #000; -webkit-transition: all 0.5s ease; -webkit-transition-delay: 0.5s; } a.foo:hover { background: #33f; color: #fff; } Теперь наша анимация будет работать через полсекунды после наведения мышки. */
}
.inputField input:focus{
  border-color: #413c47;
}
.inputField button{
  width: 30px;
  height: 100%;
  border: 3px solid rgb(132, 113, 113);
  color: #fff;
  margin-left: 5px;
  font-size: 21px;
  outline: none;
  background: #2a348f;
  cursor: pointer;
  border-radius: 13px;
  opacity: 0.6; /*CSS свойство opacity определяет уровень прозрачности для элемента (1 - элемент непрозрачный (это значение по умолчанию), 0,5/50% - среднее значение, 0 - элемент полностью прозрачный). Поддержка браузерами. Свойство. Chrome. Firefox. Opera. Safari. */
  pointer-events: none; /*CSS-свойство** pointer-events** позволяет контролировать события, при которых элемент может стать объектом события мыши. Если это свойство не задано, то к содержимому SVG будут применяться характеристики значения visiblePainted. ... CSS-свойство** pointer-events** позволяет контролировать события, при которых элемент может стать объектом события мыши. Если это свойство не задано, то к содержимому SVG будут применяться характеристики значения visiblePainted. Вдобавок к указанию того, что элемент не является объектом события мыши, значение none сообщает событию мыши проходить "через" элемент и обращаться к элементу, находящемуся "под" ним. Начальное значение. auto. */
  transition: all 0.3s ease;
}
.inputField button:hover,
.footer button:hover{
  background: #1c2576;
}
.inputField button.active{
  opacity: 1;
  pointer-events: auto;
}
.wrapper .todoList{
  max-height: 250px;
  overflow-y: auto; /*Свойство overflow-y управляет отображением содержания блочного элемента по вертикали, если контент целиком не помещается и выходит за область сверху или снизу от блока. */
}
.todoList li{
  position: relative; /*Относительное позиционирование сдвигает элемент относительно его обычного положения.

  Для того, чтобы применить относительное позиционирование, необходимо указать элементу CSS-свойство position: relative и координаты left/right/top/bottom.*/
  list-style: none;
  margin-bottom: 8px;
  background: #f2f2f2;
  border-radius: 3px;
  padding: 10px 15px;
  cursor: default;
  overflow: hidden; /*отображение в этом случае задаётся свойством overflow. Возможные значения. visible (по умолчанию). hidden. ... Кроме того, значение overflow: auto | hidden изменяет поведение контейнера, содержащего float. Так как элемент с float находится вне потока, то обычно контейнер не выделяет под него место. Но если стоит такой overflow, то место выделяется, т.е. контейнер растягивается.*/
  word-wrap: break-word; /*CSS свойство word-wrap указывает браузеру, переносить или нет длинные слова, которые не помещаются по ширине в заданную область (разрешается ли разрывать строки внутри слов).*/
}
.todoList li .icon{
  position: absolute;
  right: -45px;
  top: 50%;
  transform: translateY(-50%);
  background: #eae318;
  width: 45px;
  text-align: center;
  color: #fff;
  padding: 10px 15px;
  border-radius: 0 3px 3px 0;
  cursor: pointer;
  transition: all 0.2s ease;
}
.todoList li:hover .icon{
  right: 0px;
}
.wrapper .footer{
  display: flex;
  width: 100%;
  margin-top: 20px;
  align-items: center;
  justify-content: space-between;
}
.footer button{
  padding: 6px 10px;
  border-radius: 3px;
  border: none;
  outline: none;
  color: #fff;
  font-weight: 400;
  font-size: 16px;
  margin-left: 5px;
  background: #191c70;
  cursor: pointer;
  user-select: none;
  opacity: 0.6;
  pointer-events: none;
  transition: all 0.3s ease;
}
.footer button.active{
  opacity: 1;
  pointer-events: auto;
}